{"version":3,"sources":["logo.svg","VideoPlayer.js","App.js","reportWebVitals.js","index.js"],"names":["VideoPlayer","props","state","currentUrl","nextVideo","bind","currentVideo","this","setState","urls","className","url","controls","playing","config","youtube","autoplay","modestbranding","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAAe,I,6FC2CAA,E,kDArCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,WAAY,IAEhB,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBALH,E,6CASlB,SAAUC,GACNC,KAAKC,SAAS,CAACL,WAAYI,KAAKN,MAAMQ,KAAK,O,oBAG/C,WACI,IAAMA,EAAOF,KAAKN,MAAMQ,KAGxB,OACI,qBAAKC,UAAU,cAAf,SACI,cAAC,IAAD,CACIA,UAAU,eACVC,IAAKF,EACLG,UAAU,EACVC,SAAS,EACTC,OAAQ,CACJC,QAAS,CACLC,SAAU,EACVC,eAAgB,Y,GA5BlBC,aCgBXC,MAjBf,WAKE,OACE,sBAAKT,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,8CACA,6DAEF,cAAC,EAAD,CAAaD,KAVJ,CACX,kCAUE,uDCJSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.861a1ffc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { render } from \"@testing-library/react\";\r\nimport React, {Component} from \"react\";\r\nimport ReactPlayer from 'react-player/youtube'\r\nimport \"./VideoPlayer.css\"\r\n\r\nclass VideoPlayer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentUrl: \"\"\r\n        }\r\n        this.nextVideo = this.nextVideo.bind(this);\r\n\r\n    }\r\n\r\n    nextVideo(currentVideo) {\r\n        this.setState({currentUrl: this.props.urls[0]});\r\n    }\r\n\r\n    render() {\r\n        const urls = this.props.urls;\r\n        //const _currUrl = this.nextVideo(null) // no video played yet.\r\n        \r\n        return(\r\n            <div className=\"VideoPlayer\">\r\n                <ReactPlayer\r\n                    className=\"react-player\"\r\n                    url={urls}\r\n                    controls={false}\r\n                    playing={true}\r\n                    config={{\r\n                        youtube: {\r\n                            autoplay: 1,\r\n                            modestbranding: 1\r\n                        }\r\n                    }}\r\n                />\r\n                {/*<button>next (random) gibberish &#x2192;</button>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VideoPlayer;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport VideoPlayer from './VideoPlayer'\n\nfunction App() {\n  const urls = [\n    \"https://youtu.be/gNf8Bsu0UYc\"\n  ];\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__Header\">\n        <h1>Gibberish.TV</h1>\n        <h2>Unwind an exhausted mind</h2>\n      </div>\n      <VideoPlayer urls={urls} />\n      <footer> The Footer. </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}